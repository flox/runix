name: CI

on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:

jobs:

  check-systems:
    name: Check runix ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install Nix
        uses: cachix/install-nix-action@v22
        with:
          extra_nix_config: |
            experimental-features = nix-command flakes
            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}
            substituters = https://cache.nixos.org
            trusted-public-keys = cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY=
            max-jobs = auto
            cores = 0
            substitute = true
            builders-use-substitutes = true
            fallback = true
            connect-timeout = 5
            stalled-download-timeout = 90
            timeout = 0

      - name: check clippy
        run: nix develop '.#rust-env' -c cargo clippy

      - name: check format
        run: nix develop '.#rust-env' -c cargo fmt --check

      - name: run tests
        run: nix develop '.#rust-env' -c cargo test

  check:
    if: ${{ always() }}
    runs-on: ubuntu-latest
    name: Check runix
    needs: check-systems
    steps:
      - if: >-
          ${{ 
              contains( needs.*.result, 'failure'   ) ||
              contains( needs.*.result, 'cancelled' )
           }}
        run: exit 1
